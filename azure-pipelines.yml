trigger:
- main

pool:
  name: agentpool

parameters:
  - name: simulateFailure
    type: string
    default: 'false'
    values:
      - 'true'
      - 'false'
    displayName: "Simulate Failure: set to 'true' to hang the app at startup"

variables:
  appName: 'prime-api'
  kubeNamespace: 'default'
  acrName: 'andreikubetestassignmentacr.azurecr.io'
  clusterEndpoint: 'kube-test-assignment-cluster.eastus.cloudapp.azure.com'
  aksCluster: 'aks-cluster'
  resourceGroup: 'cluster'
  azureSubscriptionConnectionId: $(AZURESERVICECONNECTIONID)
  SIMULATE_FAILURE: ${{ parameters.simulateFailure }}
  tag: "$(Build.BuildId)"

steps:

- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: 'build'
    containerRegistry: $(acrName)
    repository: $(appName)
    dockerfile: './src/$(appName)/Dockerfile'
    tags: $(tag)
    arguments: --build-arg VERSION=$(tag)

- task: Docker@2
  displayName: 'Push Docker image'
  inputs:
    command: 'push'
    containerRegistry: $(acrName)
    repository: $(appName)
    tags: $(tag)

- task: Kubernetes@1
  displayName: Login to Kubernetes
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: $(azureSubscriptionConnectionId)
    azureResourceGroup: $(resourceGroup)
    kubernetesCluster: $(aksCluster)
    command: login

- task: HelmDeploy@1
  displayName: 'Deploy Helm chart'
  inputs:
    azureSubscription: $(azureSubscriptionConnectionId)
    azureResourceGroup: $(resourceGroup)
    kubernetesCluster: $(aksCluster)
    namespace: $(kubeNamespace)
    command: 'upgrade'
    releaseName: $(appName)
    chartType: 'FilePath'
    chartPath: ./charts/$(appName)
    overrideValues: |
      image.repository=$(acrName)/$(appName)
      image.tag=$(tag)
      envVariables.SIMULATE_FAILURE=$(SIMULATE_FAILURE)
    waitForCompletion: false
    install: true

- script: |
    chmod +x ./scripts/check-deployment.sh
    ./scripts/check-deployment.sh $(appName)
  displayName: 'Check helm is deployed and port is open'

- script: |
    echo 'App deployed'
    echo 'Follow http://$(clusterEndpoint)/version'
